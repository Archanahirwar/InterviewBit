/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 
 void fun(TreeNode*A,map<int,vector<int>>&m,int hd){
     if(A==NULL){
         return;
     }
     m[hd].push_back(A->val);
     fun(A->left,m,hd+1);
     fun(A->right,m,hd);
 }
vector<int> Solution::solve(TreeNode* A) {
    vector<int>v;
    if(A==NULL){
        return v;
    }
    map<int,vector<int>>m;
    fun(A,m,0);
    for(auto it=m.begin();it!=m.end();it++){
        for(int i=0;i<it->second.size();i++){
            v.push_back(it->second[i]);
        }
    }
    return v;
    
}
